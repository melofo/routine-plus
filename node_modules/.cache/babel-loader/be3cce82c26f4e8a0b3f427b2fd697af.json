{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/melofo/Downloads/cs5500_foundOfSoftwareEngineering/project/project-route-plus/src/components/Code.jsx\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport React from \"react\";\nconst defaultStyle = {\n  padding: \"8px 20px\"\n};\nconst exampleCode = `\nimport React, { Component } from 'react'\n\nimport ParticlesBg from 'particles-bg'\n\nclass Example extends Component {\n  render () {\n    return (\n      <>\n        <div>...</div>\n        <ParticlesBg type=\"circle\" bg={true} />\n      </>\n    )\n  }\n}\n`;\n\nconst Code = () => /*#__PURE__*/_jsxDEV(Highlight, { ...defaultProps,\n  code: exampleCode,\n  language: \"jsx\",\n  children: ({\n    className,\n    style,\n    tokens,\n    getLineProps,\n    getTokenProps\n  }) => {\n    const fStyle = Object.assign(defaultStyle, style);\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: className,\n      style: fStyle,\n      children: tokens.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", { ...getLineProps({\n          line,\n          key: i\n        }),\n        children: line.map((token, key) => /*#__PURE__*/_jsxDEV(\"span\", { ...getTokenProps({\n            token,\n            key\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n\n_c = Code;\nexport default Code;\n\nvar _c;\n\n$RefreshReg$(_c, \"Code\");","map":{"version":3,"sources":["/Users/melofo/Downloads/cs5500_foundOfSoftwareEngineering/project/project-route-plus/src/components/Code.jsx"],"names":["Highlight","defaultProps","React","defaultStyle","padding","exampleCode","Code","className","style","tokens","getLineProps","getTokenProps","fStyle","Object","assign","map","line","i","key","token"],"mappings":";;AAAA,OAAOA,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;AAIA,MAAMC,WAAW,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,MAAMC,IAAI,GAAG,mBACX,QAAC,SAAD,OAAeL,YAAf;AAA6B,EAAA,IAAI,EAAEI,WAAnC;AAAgD,EAAA,QAAQ,EAAC,KAAzD;AAAA,YACG,CAAC;AAAEE,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,MAApB;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA;AAA1C,GAAD,KAA+D;AAC9D,UAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcX,YAAd,EAA4BK,KAA5B,CAAf;AAEA,wBACE;AAAK,MAAA,SAAS,EAAED,SAAhB;AAA2B,MAAA,KAAK,EAAEK,MAAlC;AAAA,gBACGH,MAAM,CAACM,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACV,oBAASP,YAAY,CAAC;AAAEM,UAAAA,IAAF;AAAQE,UAAAA,GAAG,EAAED;AAAb,SAAD,CAArB;AAAA,kBACGD,IAAI,CAACD,GAAL,CAAS,CAACI,KAAD,EAAQD,GAAR,kBACR,qBAAUP,aAAa,CAAC;AAAEQ,YAAAA,KAAF;AAASD,YAAAA;AAAT,WAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;AAfH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMZ,I;AAoBN,eAAeA,IAAf","sourcesContent":["import Highlight, { defaultProps } from \"prism-react-renderer\";\nimport React from \"react\";\n\nconst defaultStyle = {\n  padding: \"8px 20px\"\n};\n\nconst exampleCode = `\nimport React, { Component } from 'react'\n\nimport ParticlesBg from 'particles-bg'\n\nclass Example extends Component {\n  render () {\n    return (\n      <>\n        <div>...</div>\n        <ParticlesBg type=\"circle\" bg={true} />\n      </>\n    )\n  }\n}\n`;\n\nconst Code = () => (\n  <Highlight {...defaultProps} code={exampleCode} language=\"jsx\">\n    {({ className, style, tokens, getLineProps, getTokenProps }) => {\n      const fStyle = Object.assign(defaultStyle, style);\n\n      return (\n        <pre className={className} style={fStyle}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )\n    }}\n  </Highlight>\n);\n\nexport default Code;\n"]},"metadata":{},"sourceType":"module"}