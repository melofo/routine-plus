{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/melofo/Downloads/cs5500_foundOfSoftwareEngineering/project/project-route-plus/src/App.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Parallax } from \"react-parallax\";\nimport ParticlesBg from \"particles-bg\";\nimport { AwesomeButton } from \"react-awesome-button\";\nimport Code from \"./components/Code.jsx\";\nimport Icons from \"./components/Icons.jsx\";\nimport \"react-awesome-button/dist/styles.css\";\nimport \"./App.css\";\nimport image1 from \"./assets/01.jpeg\";\nimport image2 from \"./assets/02.jpeg\";\nimport image3 from \"./assets/03.jpeg\";\nimport image4 from \"./assets/04.jpeg\";\nimport image5 from \"./assets/05.jpeg\";\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"main\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Parallax, {\n      strength: 500,\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"polygon\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxs header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Simple gh-pages Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"introduction\",\n            children: \"Here is a brief introduction of your project, which can explain what your project wants, what functions it has, and what great and attractive places it has.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://github.com/lindelof/particles-bg\",\n              children: /*#__PURE__*/_jsxDEV(AwesomeButton, {\n                size: \"medium\",\n                type: \"secondary\",\n                children: \"homepage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://github.com/nordicgiant2/gh-pages-theme\",\n              children: /*#__PURE__*/_jsxDEV(AwesomeButton, {\n                size: \"medium\",\n                type: \"primary\",\n                children: \"github\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n      bgImage: image1,\n      blur: {\n        min: -1,\n        max: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"underline\",\n            children: \"Project Introduction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-con\",\n            children: \"My view of functional languages is that they all use very powerful compilers, such as Haskell. For such a compiler, functional generics are very useful because they make a lot of transformations possible, including parallelization. But the Python interpreter doesn't know what your code means, which is also useful. So, I don't think it's reasonable to add the following functional ideas to python, because these are very useful in functional languages, but not suitable for Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n      strength: -100,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"blue underline\",\n            children: \"Characteristic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icons, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-con blue\",\n            children: \"My view of functional languages is that they all use very powerful compilers, such as Haskell. For such a compiler, functional generics are very useful because they make a lot of transformations possible, including parallelization. But the Python interpreter doesn't know what your code means, which is also useful. So, I don't think it's reasonable to add the following functional ideas to python, because these are very useful in functional languages, but not suitable for Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n      bgImage: image4,\n      strength: 200,\n      renderLayer: percentage => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            background: `rgba(255, 125, 0, ${percentage * 1})`,\n            left: \"50%\",\n            top: \"50%\",\n            borderRadius: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n            width: percentage * 500,\n            height: percentage * 500\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxs\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bsize\",\n            children: \"lightweight, high performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n      strength: -100,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxs\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-con blue\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"underline\",\n              children: \"Sample Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left code\",\n              children: /*#__PURE__*/_jsxDEV(Code, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"This is the code of some examples. You can copy and paste it into your program to run. If you want to learn more about its usage, please visit the document page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer\",\n    children: \"Copyright Mr right. This code is open source.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/melofo/Downloads/cs5500_foundOfSoftwareEngineering/project/project-route-plus/src/App.js"],"names":["React","render","Parallax","ParticlesBg","AwesomeButton","Code","Icons","image1","image2","image3","image4","image5","App","height","min","max","percentage","position","background","left","top","borderRadius","transform","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Parallax } from \"react-parallax\";\nimport ParticlesBg from \"particles-bg\";\nimport { AwesomeButton } from \"react-awesome-button\";\nimport Code from \"./components/Code.jsx\";\nimport Icons from \"./components/Icons.jsx\";\n\nimport \"react-awesome-button/dist/styles.css\";\nimport \"./App.css\";\n\nimport image1 from \"./assets/01.jpeg\";\nimport image2 from \"./assets/02.jpeg\";\nimport image3 from \"./assets/03.jpeg\";\nimport image4 from \"./assets/04.jpeg\";\nimport image5 from \"./assets/05.jpeg\";\n\n\nconst App = () => (\n  <div className=\"main\">\n    <div className=\"container\">\n      <Parallax strength={500}>\n        <ParticlesBg type=\"polygon\" bg={true}/>\n        <div style={{ height: 500 }}>\n          <div className=\"boxs header\">\n            <h1 className=\"title\">Simple gh-pages Template</h1>\n            <h4 className=\"introduction\">\n              Here is a brief introduction of your project, which can explain what your project wants, what functions it has, and what great and attractive places it has.\n            </h4>\n            <div className=\"buttons\">\n              <a href=\"https://github.com/lindelof/particles-bg\">\n                <AwesomeButton\n                  size=\"medium\"\n                  type=\"secondary\"\n                >\n                  homepage\n                </AwesomeButton> \n              </a> \n              <div className=\"space\"></div>\n              <a href=\"https://github.com/nordicgiant2/gh-pages-theme\">\n                <AwesomeButton\n                  size=\"medium\"\n                  type=\"primary\"\n                >\n                  github\n                </AwesomeButton>\n              </a> \n            </div>\n          </div>\n        </div>\n      </Parallax>\n\n      <Parallax bgImage={image1} blur={{ min: -1, max: 3 }}>\n        <div style={{ height: 600 }}>\n          <div className=\"boxs\">\n            <h1 className=\"underline\">Project Introduction</h1>\n            <div className=\"box-con\">\n              My view of functional languages is that they all use very powerful compilers, such as Haskell. For such a compiler, functional generics are very useful because they make a lot of transformations possible, including parallelization. But the Python interpreter doesn't know what your code means, which is also useful. So, I don't think it's reasonable to add the following functional ideas to python, because these are very useful in functional languages, but not suitable for Python\n            </div>\n          </div>\n        </div>\n      </Parallax>\n\n      <Parallax strength={-100}>\n        <div style={{ height: 500 }}>\n          <div className=\"boxs\">\n            <h1 className=\"blue underline\">Characteristic</h1>\n            <Icons />\n            <div className=\"box-con blue\">\n              My view of functional languages is that they all use very powerful compilers, such as Haskell. For such a compiler, functional generics are very useful because they make a lot of transformations possible, including parallelization. But the Python interpreter doesn't know what your code means, which is also useful. So, I don't think it's reasonable to add the following functional ideas to python, because these are very useful in functional languages, but not suitable for Python\n            </div>\n          </div>\n        </div>\n      </Parallax>\n\n      <Parallax\n        bgImage={image4}\n        strength={200}\n        renderLayer={percentage => (\n          <div>\n            <div\n              style={{\n                position: \"absolute\",\n                background: `rgba(255, 125, 0, ${percentage * 1})`,\n                left: \"50%\",\n                top: \"50%\",\n                borderRadius: \"50%\",\n                transform: \"translate(-50%,-50%)\",\n                width: percentage * 500,\n                height: percentage * 500\n              }}\n            />\n          </div>\n        )}\n      >\n        <div style={{ height: 500 }}>\n          <div className=\"boxs\">\n            <div className=\"bsize\">lightweight, high performance</div>\n          </div>\n        </div>\n      </Parallax>\n\n      <Parallax strength={-100}>\n        <div style={{ height: 600 }}>\n          <div className=\"boxs\">\n            <div className=\"box-con blue\">\n              <h1 className=\"underline\">Sample Code</h1>\n              <div className=\"left code\"><Code /></div>\n              <div>This is the code of some examples. You can copy and paste it into your program to run. If you want to learn more about its usage, please visit the document page</div>\n            </div>\n          </div>\n        </div>\n      </Parallax>\n    </div>\n    <div className=\"footer\">Copyright Mr right. This code is open source.</div>\n  </div>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}