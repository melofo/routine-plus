{"ast":null,"code":"import _objectSpread from\"/Users/melofo/Downloads/cs5500_foundOfSoftwareEngineering/project/project-route-plus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import Highlight,{defaultProps}from\"prism-react-renderer\";import React from\"react\";var defaultStyle={padding:\"8px 20px\"};var exampleCode=\"\\nclass Block extends Component {\\n  render() {\\n    var image = this.props.block.image;\\n    var image_url = \\\"http://localhost:5000/images/\\\" + image;\\n    console.log(image);\\n    return(\\n      <tr>\\n        <td><img id=\\\"img\\\" style={{display: \\\"block\\\"}} alt=\\\"\\\" src={image_url}/></td>\\n        <td>{this.props.block.task}</td>\\n        <td>{this.props.block.routine}</td>\\n        <td>{this.props.block.date.substring(0,10)}</td>\\n        <td>\\n          <Link to = {\\\"/edit/\\\"+this.props.block._id}>edit</Link> \\n          <p> </p>\\n          <a href=\\\"#top\\\" onClick={() => {this.props.deleteBlock(this.props.block._id)}}>delete</a>          \\n        </td>\\n      </tr>\\n    )\\n  }\\n}\\n\";var Code=function Code(){return/*#__PURE__*/_jsx(Highlight,_objectSpread(_objectSpread({},defaultProps),{},{code:exampleCode,language:\"jsx\",children:function children(_ref){var className=_ref.className,style=_ref.style,tokens=_ref.tokens,getLineProps=_ref.getLineProps,getTokenProps=_ref.getTokenProps;var fStyle=Object.assign(defaultStyle,style);return/*#__PURE__*/_jsx(\"pre\",{className:className,style:fStyle,children:tokens.map(function(line,i){return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({},getLineProps({line:line,key:i})),{},{children:line.map(function(token,key){return/*#__PURE__*/_jsx(\"span\",_objectSpread({},getTokenProps({token:token,key:key})));})}));})});}}));};export default Code;","map":{"version":3,"sources":["/Users/melofo/Downloads/cs5500_foundOfSoftwareEngineering/project/project-route-plus/src/components/Code.jsx"],"names":["Highlight","defaultProps","React","defaultStyle","padding","exampleCode","Code","className","style","tokens","getLineProps","getTokenProps","fStyle","Object","assign","map","line","i","key","token"],"mappings":"qPAAA,MAAOA,CAAAA,SAAP,EAAoBC,YAApB,KAAwC,sBAAxC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAE,UADU,CAArB,CAIA,GAAMC,CAAAA,WAAW,4rBAAjB,CAuBA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,sBACX,KAAC,SAAD,gCAAeL,YAAf,MAA6B,IAAI,CAAEI,WAAnC,CAAgD,QAAQ,CAAC,KAAzD,UACG,uBAA+D,IAA5DE,CAAAA,SAA4D,MAA5DA,SAA4D,CAAjDC,KAAiD,MAAjDA,KAAiD,CAA1CC,MAA0C,MAA1CA,MAA0C,CAAlCC,YAAkC,MAAlCA,YAAkC,CAApBC,aAAoB,MAApBA,aAAoB,CAC9D,GAAMC,CAAAA,MAAM,CAAGC,MAAM,CAACC,MAAP,CAAcX,YAAd,CAA4BK,KAA5B,CAAf,CACA,mBACE,YAAK,SAAS,CAAED,SAAhB,CAA2B,KAAK,CAAEK,MAAlC,UACGH,MAAM,CAACM,GAAP,CAAW,SAACC,IAAD,CAAOC,CAAP,qBACV,0CAASP,YAAY,CAAC,CAAEM,IAAI,CAAJA,IAAF,CAAQE,GAAG,CAAED,CAAb,CAAD,CAArB,eACGD,IAAI,CAACD,GAAL,CAAS,SAACI,KAAD,CAAQD,GAAR,qBACR,6BAAUP,aAAa,CAAC,CAAEQ,KAAK,CAALA,KAAF,CAASD,GAAG,CAAHA,GAAT,CAAD,CAAvB,EADQ,EAAT,CADH,GADU,EAAX,CADH,EADF,CAWD,CAdH,GADW,EAAb,CAmBA,cAAeZ,CAAAA,IAAf","sourcesContent":["import Highlight, { defaultProps } from \"prism-react-renderer\";\nimport React from \"react\";\n\nconst defaultStyle = {\n  padding: \"8px 20px\"\n};\n\nconst exampleCode = `\nclass Block extends Component {\n  render() {\n    var image = this.props.block.image;\n    var image_url = \"http://localhost:5000/images/\" + image;\n    console.log(image);\n    return(\n      <tr>\n        <td><img id=\"img\" style={{display: \"block\"}} alt=\"\" src={image_url}/></td>\n        <td>{this.props.block.task}</td>\n        <td>{this.props.block.routine}</td>\n        <td>{this.props.block.date.substring(0,10)}</td>\n        <td>\n          <Link to = {\"/edit/\"+this.props.block._id}>edit</Link> \n          <p> </p>\n          <a href=\"#top\" onClick={() => {this.props.deleteBlock(this.props.block._id)}}>delete</a>          \n        </td>\n      </tr>\n    )\n  }\n}\n`;\n\nconst Code = () => (\n  <Highlight {...defaultProps} code={exampleCode} language=\"jsx\">\n    {({ className, style, tokens, getLineProps, getTokenProps }) => {\n      const fStyle = Object.assign(defaultStyle, style);\n      return (\n        <pre className={className} style={fStyle}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )\n    }}\n  </Highlight>\n);\n\nexport default Code;\n"]},"metadata":{},"sourceType":"module"}